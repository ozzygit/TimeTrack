<Window x:Class="TimeTrack.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:data="clr-namespace:TimeTrack.Data"
        xmlns:views="clr-namespace:TimeTrack.Views"
        xmlns:viewModels="clr-namespace:TimeTrack.ViewModels"
        xmlns:converters="clr-namespace:TimeTrack.Converters"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=viewModels:TimeKeeperViewModel, IsDesignTimeCreatable=False}"
        Title="TimeTrack v2" Height="950" Width="750" MinWidth="750" MaxWidth="1000" MinHeight="750"
        Icon="/Resources/time.png" Background="#F5F5F5"
        WindowStartupLocation="CenterScreen">

    <Window.Resources>
        <data:TimeEntryUIConverter x:Key="TimeEntryUIConverter"/>
        <converters:AllNotEmptyConverter x:Key="AllNotEmptyConverter"/>
        <converters:ShortcutDisplayConverter x:Key="ShortcutDisplayConverter"/>

        <!-- Modern Color Palette -->
        <SolidColorBrush x:Key="PrimaryBrush" Color="#0078D4"/>
        <SolidColorBrush x:Key="PrimaryHoverBrush" Color="#106EBE"/>
        <SolidColorBrush x:Key="PrimaryPressedBrush" Color="#005A9E"/>
        <SolidColorBrush x:Key="AccentBrush" Color="#0078D4"/>
        <SolidColorBrush x:Key="BorderBrush" Color="#E1E1E1"/>
        <SolidColorBrush x:Key="BackgroundBrush" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="TextBrush" Color="#323130"/>
        <SolidColorBrush x:Key="SubtleBrush" Color="#605E5C"/>

        <!-- Modern Menu Styles -->
        <Style TargetType="Menu">
            <Setter Property="Background" Value="White"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="13"/>
        </Style>

        <Style TargetType="MenuItem">
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="Padding" Value="12,6"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="MenuItem">
                        <Border x:Name="Border" 
                                Background="{TemplateBinding Background}"
                                BorderThickness="0"
                                CornerRadius="4"
                                Margin="2,0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <!-- Icon (for submenus if needed) -->
                                <ContentPresenter x:Name="Icon"
                                                Grid.Column="0"
                                                Margin="6,0,6,0"
                                                VerticalAlignment="Center"
                                                ContentSource="Icon"/>

                                <!-- Header Text -->
                                <ContentPresenter x:Name="HeaderHost"
                                                Grid.Column="1"
                                                ContentSource="Header"
                                                Margin="{TemplateBinding Padding}"
                                                VerticalAlignment="Center"
                                                RecognizesAccessKey="True"/>

                                <!-- Input Gesture Text (Keyboard Shortcut) -->
                                <TextBlock x:Name="InputGestureText"
                                         Grid.Column="2"
                                         Text="{TemplateBinding InputGestureText}"
                                         Margin="20,0,10,0"
                                         VerticalAlignment="Center"
                                         Foreground="{StaticResource SubtleBrush}"
                                         FontSize="12"/>

                                <!-- Submenu Arrow -->
                                <Path x:Name="ArrowPath"
                                    Grid.Column="3"
                                    Margin="4,0,6,0"
                                    VerticalAlignment="Center"
                                    Fill="{StaticResource TextBrush}"
                                    Data="M 0 0 L 4 4 L 0 8 Z"
                                    Visibility="Collapsed"/>

                                <!-- Popup for submenus -->
                                <Popup x:Name="PART_Popup"
                                     AllowsTransparency="True"
                                     Placement="Bottom"
                                     IsOpen="{TemplateBinding IsSubmenuOpen}"
                                     Focusable="False"
                                     PopupAnimation="Fade"
                                     VerticalOffset="2">
                                    <Border Background="White"
                                          BorderBrush="{StaticResource BorderBrush}"
                                          BorderThickness="1"
                                          CornerRadius="6"
                                          Padding="4">
                                        <Border.Effect>
                                            <DropShadowEffect Color="#000000" Opacity="0.15" 
                                                            BlurRadius="12" ShadowDepth="4" Direction="270"/>
                                        </Border.Effect>
                                        <ScrollViewer Style="{DynamicResource {ComponentResourceKey 
                                                      TypeInTargetAssembly={x:Type FrameworkElement}, 
                                                      ResourceId=MenuScrollViewer}}"
                                                    MaxHeight="400">
                                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle"
                                                          Grid.IsSharedSizeScope="True"
                                                          Margin="0,4"/>
                                        </ScrollViewer>
                                    </Border>
                                </Popup>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Top level menu item (File, Edit, etc.) -->
                            <Trigger Property="Role" Value="TopLevelHeader">
                                <Setter TargetName="PART_Popup" Property="Placement" Value="Bottom"/>
                                <Setter TargetName="ArrowPath" Property="Visibility" Value="Collapsed"/>
                            </Trigger>

                            <!-- Submenu header (has children) -->
                            <Trigger Property="Role" Value="SubmenuHeader">
                                <Setter TargetName="PART_Popup" Property="Placement" Value="Right"/>
                                <Setter TargetName="ArrowPath" Property="Visibility" Value="Visible"/>
                            </Trigger>

                            <!-- Mouse over effect -->
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#F3F3F3"/>
                            </Trigger>
                            <!-- Pressed effect -->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#E8E8E8"/>
                            </Trigger>

                            <!-- Submenu open effect for top level -->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSubmenuOpen" Value="True"/>
                                    <Condition Property="Role" Value="TopLevelHeader"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Border" Property="Background" Value="#E8E8E8"/>
                            </MultiTrigger>

                            <!-- Disabled state -->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Separator Style -->
        <Style TargetType="Separator">
            <Setter Property="Background" Value="{StaticResource BorderBrush}"/>
            <Setter Property="Height" Value="1"/>
            <Setter Property="Margin" Value="8,4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Separator">
                        <Border Background="{StaticResource BorderBrush}" 
                              Height="1" 
                              Margin="32,4,8,4"
                              CornerRadius="0.5"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Modern Button Style -->
        <Style TargetType="Button">
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="12,6"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" 
                                            VerticalAlignment="Center"
                                            Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#F3F3F3"/>
                    <Setter Property="BorderBrush" Value="#D1D1D1"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#E8E8E8"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5"/>
                    <Setter Property="Cursor" Value="Arrow"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Primary Button Style -->
        <Style x:Key="PrimaryButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource PrimaryHoverBrush}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{StaticResource PrimaryPressedBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Modern TextBlock Style -->
        <Style TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        </Style>

        <!-- Label Style -->
        <Style x:Key="LabelStyle" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
            <Setter Property="Margin" Value="0,0,0,4"/>
        </Style>

        <!-- Modern TextBox Style -->
        <Style TargetType="TextBox">
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Padding" Value="4,3"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4">
                            <ScrollViewer x:Name="PART_ContentHost" 
                                        Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="#C4C4C4"/>
                </Trigger>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
                    <Setter Property="BorderThickness" Value="2"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Modern DataGrid Style -->
        <Style TargetType="DataGrid">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="GridLinesVisibility" Value="Horizontal"/>
            <Setter Property="HorizontalGridLinesBrush" Value="#F3F3F3"/>
            <Setter Property="RowBackground" Value="White"/>
            <Setter Property="AlternatingRowBackground" Value="#FAFAFA"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="13"/>
        </Style>

        <Style TargetType="DataGridColumnHeader">
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Background" Value="#F8F8F8"/>
            <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
            <Setter Property="Padding" Value="8,8"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
        </Style>

        <Style TargetType="DataGridRow">
            <EventSetter Event="MouseDoubleClick" Handler="DgRow_MouseDoubleClick"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Style.Triggers>
                <!-- MouseOver on unselected rows only - must come BEFORE IsSelected -->
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True"/>
                        <Condition Property="IsSelected" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="#F0F6FC"/>
                </MultiTrigger>
                <!-- Selected state - AFTER MouseOver so it takes precedence -->
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#CCE4F7"/>
                    <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Override DataGridCell style to prevent cell borders from showing -->
        <Style TargetType="DataGridCell">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Style.Triggers>
                <!-- Keep cell background transparent when row is selected -->
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Modern DatePicker Style -->
        <Style TargetType="DatePicker">
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Padding" Value="8,6"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style>

        <!-- Modern CheckBox Style -->
        <Style TargetType="CheckBox">
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        </Style>

        <!-- Modern DataGrid CheckBox Style -->
        <Style x:Key="DataGridCheckBoxStyle" TargetType="CheckBox">
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid Background="Transparent">
                            <Border x:Name="CheckBoxBorder"
                                    Width="18"
                                    Height="18"
                                    Background="White"
                                    BorderBrush="{StaticResource BorderBrush}"
                                    BorderThickness="2"
                                    CornerRadius="3">
                                <Path x:Name="CheckMark"
                                      Width="12"
                                      Height="12"
                                      Data="M 0,5 L 4,9 L 10,1"
                                      Stroke="{StaticResource PrimaryBrush}"
                                      StrokeThickness="2.5"
                                      StrokeLineJoin="Round"
                                      Visibility="Collapsed"
                                      Stretch="Uniform"
                                      Margin="2"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <!-- Checked State -->
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="CheckBoxBorder" Property="Background" Value="#E5F1FB"/>
                                <Setter TargetName="CheckBoxBorder" Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
                            </Trigger>

                            <!-- Mouse Over -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="CheckBoxBorder" Property="BorderBrush" Value="{StaticResource PrimaryHoverBrush}"/>
                                <Setter TargetName="CheckBoxBorder" Property="Background" Value="#F0F6FC"/>
                            </Trigger>

                            <!-- Mouse Over + Checked -->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsChecked" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="CheckBoxBorder" Property="Background" Value="#D0E7F9"/>
                                <Setter TargetName="CheckBoxBorder" Property="BorderBrush" Value="{StaticResource PrimaryHoverBrush}"/>
                            </MultiTrigger>

                            <!-- Disabled -->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="CheckBoxBorder" Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Card Style for Sections -->
        <Style x:Key="CardStyle" TargetType="Border">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CornerRadius" Value="8"/>
            <Setter Property="Padding" Value="16"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="#000000" Opacity="0.05" 
                                    BlurRadius="8" ShadowDepth="2" Direction="270"/>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Notes Cell Text Style -->
        <Style x:Key="NotesCellTextStyle" TargetType="TextBlock">
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
            <Setter Property="TextWrapping" Value="NoWrap"/>
            <Setter Property="MaxHeight" Value="20"/>
            <Setter Property="ToolTip" Value="{Binding Notes}"/>
        </Style>
    </Window.Resources>

    <!-- Keyboard bindings are configured dynamically in MainWindow.xaml.cs via ApplyKeyboardShortcuts() -->
    <Window.InputBindings>
    </Window.InputBindings>

    <DockPanel>
        <!--Menu Bar-->
        <Menu DockPanel.Dock="Top" Height="40" Padding="8,4" 
              Background="White" BorderBrush="{StaticResource BorderBrush}" BorderThickness="0,0,0,1">
            <MenuItem Header="_File">
                <MenuItem x:Name="ExportMenuItem" Header="_Export Selected"
                          Command="{x:Static views:MainWindow.ExportCommand}"
                          InputGestureText="{Binding Path=., Mode=OneWay, Converter={StaticResource ShortcutDisplayConverter}, ConverterParameter=Export}"/>
                <Separator/>
                <MenuItem Header="E_xit" Click="MenuExit_Click" InputGestureText="Alt+F4"/>
            </MenuItem>
            <MenuItem Header="_Edit">
                <MenuItem x:Name="SubmitMenuItem" Header="_Submit Entry" Click="BtnSubmit"
                          InputGestureText="{Binding Path=., Mode=OneWay, Converter={StaticResource ShortcutDisplayConverter}, ConverterParameter=Submit}"/>
                <MenuItem x:Name="InsertMenuItem" Header="_Insert Record"
                          Command="{x:Static views:MainWindow.InsertCommand}"
                          InputGestureText="{Binding Path=., Mode=OneWay, Converter={StaticResource ShortcutDisplayConverter}, ConverterParameter=Insert}"/>
                <MenuItem x:Name="DeleteMenuItem" Header="_Delete Selected"
                          Command="{x:Static views:MainWindow.DeleteCommand}"
                          InputGestureText="{Binding Path=., Mode=OneWay, Converter={StaticResource ShortcutDisplayConverter}, ConverterParameter=Delete}"/>
                <Separator/>
                <MenuItem x:Name="ToggleAllMenuItem" Header="_Toggle All Recorded" Click="BtnToggleAllRecorded"
                          InputGestureText="{Binding Path=., Mode=OneWay, Converter={StaticResource ShortcutDisplayConverter}, ConverterParameter=ToggleAll}"/>
            </MenuItem>
            <MenuItem Header="_Navigation">
                <MenuItem x:Name="TodayMenuItem" Header="_Today"
                          Command="{x:Static views:MainWindow.TodayCommand}"
                          InputGestureText="{Binding Path=., Mode=OneWay, Converter={StaticResource ShortcutDisplayConverter}, ConverterParameter=Today}"/>
                <MenuItem x:Name="PrevDayMenuItem" Header="_Previous Day"
                          Command="{x:Static views:MainWindow.PrevDayCommand}"
                          InputGestureText="{Binding Path=., Mode=OneWay, Converter={StaticResource ShortcutDisplayConverter}, ConverterParameter=PrevDay}"/>
                <MenuItem x:Name="NextDayMenuItem" Header="_Next Day"
                          Command="{x:Static views:MainWindow.NextDayCommand}"
                          InputGestureText="{Binding Path=., Mode=OneWay, Converter={StaticResource ShortcutDisplayConverter}, ConverterParameter=NextDay}"/>
            </MenuItem>
            <MenuItem Header="_Tools">
                <MenuItem x:Name="OptionsMenuItem" Header="_Options"
                          Command="{x:Static views:MainWindow.OptionsCommand}"
                          InputGestureText="{Binding Path=., Mode=OneWay, Converter={StaticResource ShortcutDisplayConverter}, ConverterParameter=Options}"/>
            </MenuItem>
            <MenuItem Header="_Help">
                <MenuItem x:Name="AboutMenuItem" Header="_About TimeTrack v2"
                          Command="{x:Static views:MainWindow.HelpCommand}"
                          InputGestureText="{Binding Path=., Mode=OneWay, Converter={StaticResource ShortcutDisplayConverter}, ConverterParameter=About}"/>
            </MenuItem>
        </Menu>

        <!--Status Bar - MOVED OUTSIDE ScrollViewer-->
        <StatusBar DockPanel.Dock="Bottom" Height="25">
            <StatusBarItem>
                <TextBlock x:Name="StatusText" Text="Ready" />
            </StatusBarItem>
        </StatusBar>

        <!--Main Content with ScrollViewer-->
        <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
            <Grid Margin="12">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="200"/>
                </Grid.ColumnDefinitions>

                <!-- Left -->
                <Border Grid.Column="0" Style="{StaticResource CardStyle}" Padding="12" Margin="0,0,8,0">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <!--Date picker Section-->
                        <Grid Grid.Row="0" Margin="0,0,0,16">
                            <Grid.ColumnDefinitions >
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Column="0" FontWeight="SemiBold" FontSize="14" 
                                     VerticalAlignment="Center" Margin="0,0,8,0" Text="Date:"/>
                            <TextBlock Name="txtCurrentDate" Grid.Column="1" VerticalAlignment="Center" 
                                     Margin="0,0,12,0" FontSize="14" Text="{Binding CurrentDate}"/>
                            <DatePicker Name="CalDate" Grid.Column="2" Width="140" 
                                      HorizontalAlignment="Left" Margin="0,0,12,0"
                                      SelectedDate="{Binding Date}" SelectedDateChanged="CalLoadDate"
                                      ToolTip="Select a date to view entries"/>

                            <Button Name="BtnBack" Grid.Column="3" Width="32" Height="32" 
                                  Margin="0,0,4,0" Content="←" FontSize="16"
                                  Click="BtnGoBack" ClickMode="Release" IsEnabled="True"
                                  ToolTip="Go to previous day (Ctrl+Left)"/>

                            <Button Name="BtnToday" Grid.Column="4" Height="32" Padding="12,0"
                                  Margin="0,0,4,0" Content="Today"
                                  Click="BtnGotoToday" ClickMode="Release" IsEnabled="False"
                                  ToolTip="Return to today's date (Ctrl+T)"/>

                            <Button Name="BtnForward" Grid.Column="5" Width="32" Height="32" 
                                  Content="→" FontSize="16"
                                  Click="BtnGoForward" ClickMode="Release" IsEnabled="True"
                                  ToolTip="Go to next day (Ctrl+Right)"/>
                        </Grid>

                        <!--Entries DataGrid-->
                        <Grid Grid.Row="1">
                            <DataGrid Name="DgTimeRecords"
         ItemsSource="{Binding Entries}"
         SelectedItem="{Binding SelectedItem, Mode=TwoWay}"
         AutoGenerateColumns="False"
         HeadersVisibility="Column"
         ColumnWidth="Auto"
         RowHeaderWidth="0"
         MinColumnWidth="40"
         IsReadOnly="True"
         MaxHeight="600"
         EnableRowVirtualization="True"
         EnableColumnVirtualization="True"
         ScrollViewer.CanContentScroll="True"
         VirtualizingPanel.IsVirtualizing="True"
         VirtualizingPanel.VirtualizationMode="Recycling"
         SelectionChanged="DgTimeRecords_SelectionChanged"
         PreviewMouseRightButtonDown="DgTimeRecords_PreviewMouseRightButtonDown">
                                <DataGrid.InputBindings>
                                    <KeyBinding Key="Delete" Command="{x:Static views:MainWindow.DeleteCommand}"/>
                                </DataGrid.InputBindings>
                                <DataGrid.Columns>
                                    <DataGridCheckBoxColumn Header="" Width="30"
            Binding="{Binding Recorded, UpdateSourceTrigger=PropertyChanged}"
            ElementStyle="{StaticResource DataGridCheckBoxStyle}"
            EditingElementStyle="{StaticResource DataGridCheckBoxStyle}"/>
                                    <DataGridTextColumn Header="Start" Width="Auto"
            Binding="{Binding StartTime, Converter={StaticResource TimeEntryUIConverter}}"/>
                                    <DataGridTextColumn Header="End" Width="Auto"
            Binding="{Binding EndTime, Converter={StaticResource TimeEntryUIConverter}}"/>
                                    <DataGridTextColumn Header="Units" Width="50"
            Binding="{Binding BillableUnits}">
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="HorizontalAlignment" Value="Right"/>
                                                <Setter Property="Margin" Value="0,0,8,0"/>
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Header="Ticket Number" Width="Auto"
            Binding="{Binding TicketNumber}"/>
                                    <DataGridTextColumn Header="Notes" Width="*"
            Binding="{Binding Notes}">
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="TextBlock" BasedOn="{StaticResource NotesCellTextStyle}"/>
                                        </DataGridTextColumn.ElementStyle>
                                    </DataGridTextColumn>
                                </DataGrid.Columns>
                                <!-- Context menu for grid -->
                                <DataGrid.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Insert Record"
                                                  Command="{x:Static views:MainWindow.InsertCommand}"
                                                  CommandTarget="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                                        <MenuItem Header="Export Selected"
                                                  Command="{x:Static views:MainWindow.ExportCommand}"
                                                  CommandTarget="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                                        <Separator/>
                                        <MenuItem Header="Delete Selected"
                                                  Command="{x:Static views:MainWindow.DeleteCommand}"
                                                  CommandTarget="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                                        <Separator/>
                                        <MenuItem Header="Toggle All Recorded"
                                                  Command="{x:Static views:MainWindow.ToggleAllCommand}"
                                                  CommandTarget="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                                    </ContextMenu>
                                </DataGrid.ContextMenu>
                            </DataGrid>
                        </Grid>
                    </Grid>
                </Border>

                <!-- Right -->
                <Border Grid.Column="1" Style="{StaticResource CardStyle}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <!--Statistics Section-->
                        <StackPanel Grid.Row="0" Margin="0,0,0,20">
                            <!-- Total Hours & Gaps -->
                            <Grid Margin="0,0,0,16">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="8"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <StackPanel Grid.Column="0">
                                    <TextBlock Text="Total" FontSize="11" Foreground="{StaticResource SubtleBrush}" 
                                             HorizontalAlignment="Center" Margin="0,0,0,2"/>
                                    <TextBlock Text="{Binding HoursTotal}" FontSize="20" FontWeight="SemiBold" 
                                             HorizontalAlignment="Center" Margin="0,0,0,2"/>
                                    <TextBlock Text="hours" FontSize="10" Foreground="{StaticResource SubtleBrush}" 
                                             HorizontalAlignment="Center"/>
                                </StackPanel>

                                <StackPanel Grid.Column="2">
                                    <TextBlock Text="Gaps" FontSize="11" Foreground="{StaticResource SubtleBrush}" 
                                             HorizontalAlignment="Center" Margin="0,0,0,2"/>
                                    <TextBlock Text="{Binding GapsTotal}" FontSize="20" FontWeight="SemiBold" 
                                             HorizontalAlignment="Center" Margin="0,0,0,2"/>
                                    <TextBlock Text="minutes" FontSize="10" Foreground="{StaticResource SubtleBrush}" 
                                             HorizontalAlignment="Center"/>
                                </StackPanel>
                            </Grid>

                            <!-- Hours Worked -->
                            <Border Background="#F8F8F8" CornerRadius="4" Padding="12,8" Margin="0,0,0,12">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                    </Grid.RowDefinitions>

                                    <TextBlock Grid.Row="0" Grid.ColumnSpan="2" Text="Hours Worked" 
                                             FontSize="11" FontWeight="SemiBold"
                                             HorizontalAlignment="Center" Margin="0,0,0,6"/>

                                    <StackPanel Grid.Row="1" Grid.Column="0" HorizontalAlignment="Center">
                                        <TextBlock Text="{Binding SelectedHours}" FontSize="16" FontWeight="SemiBold" 
                                                 HorizontalAlignment="Center"/>
                                        <TextBlock Text="hours" FontSize="9" Foreground="{StaticResource SubtleBrush}" 
                                                 HorizontalAlignment="Center"/>
                                    </StackPanel>

                                    <StackPanel Grid.Row="1" Grid.Column="1" HorizontalAlignment="Center">
                                        <TextBlock Text="{Binding SelectedMins}" FontSize="16" FontWeight="SemiBold" 
                                                 HorizontalAlignment="Center"/>
                                        <TextBlock Text="minutes" FontSize="9" Foreground="{StaticResource SubtleBrush}" 
                                                 HorizontalAlignment="Center"/>
                                    </StackPanel>
                                </Grid>
                            </Border>

                            <!-- Billable Units -->
                            <Border Background="#F8F8F8" CornerRadius="4" Padding="12,10">
                                <StackPanel>
                                    <TextBlock Text="Billable Units" 
                                             FontSize="11" FontWeight="SemiBold"
                                             HorizontalAlignment="Center" 
                                             Foreground="{StaticResource TextBrush}"
                                             Margin="0,0,0,4"/>
                                    <TextBlock Text="{Binding BillableUnits}" 
                                             FontSize="22" FontWeight="Bold" 
                                             HorizontalAlignment="Center"
                                             Foreground="{StaticResource TextBrush}"/>
                                    <TextBlock Text="(6-minute blocks)" 
                                             FontSize="9"
                                             HorizontalAlignment="Center" 
                                             Foreground="{StaticResource SubtleBrush}"
                                             Margin="0,2,0,0"/>
                                </StackPanel>
                            </Border>
                        </StackPanel>

                        <!--Input Fields Section-->
                        <StackPanel Grid.Row="1" Margin="0,0,0,16">
                            <TextBlock Text="Start Time" Style="{StaticResource LabelStyle}"/>
                            <Grid Margin="0,0,0,12">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="2"/>
                                    <ColumnDefinition Width="28"/>
                                </Grid.ColumnDefinitions>

                                <TextBox Name="FldStartTime" Grid.Column="0"
                                         Text="{Binding StartTimeField, UpdateSourceTrigger=PropertyChanged}"
                                         GotFocus="InputField_GotFocus"
                                         LostFocus="TimeField_LostFocus"
                                         PreviewKeyDown="TimeField_PreviewKeyDown"
                                         TabIndex="0"/>

                                <Button Name="BtnStartTimePicker" Grid.Column="2" 
                                        Width="28" Content="🕒" FontSize="12"
                                        Padding="0"
                                        Click="BtnStartTimePicker_Click"
                                        ToolTip="Select start time from picker"/>

                                <Popup Name="PopupStartTime" 
                                       PlacementTarget="{Binding ElementName=BtnStartTimePicker}"
                                       Placement="Bottom"
                                       StaysOpen="False"
                                       AllowsTransparency="True">
                                    <Border Background="White" 
                                            BorderBrush="{StaticResource BorderBrush}" 
                                            BorderThickness="1" 
                                            CornerRadius="6"
                                            Padding="8">
                                        <Border.Effect>
                                            <DropShadowEffect Color="#000000" Opacity="0.15" 
                                                            BlurRadius="12" ShadowDepth="4" Direction="270"/>
                                        </Border.Effect>
                                        <StackPanel>
                                            <TextBlock Text="Select Start Time" FontWeight="SemiBold" Margin="0,0,0,8"/>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="8"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="8"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>

                                                <ComboBox Name="CmbStartHour" Grid.Column="0" Width="60" 
                                                          SelectedIndex="8"/>
                                                <TextBlock Grid.Column="1" Text=":" VerticalAlignment="Center" 
                                                           FontSize="16" FontWeight="Bold"/>
                                                <ComboBox Name="CmbStartMinute" Grid.Column="2" Width="60" 
                                                          SelectedIndex="0"/>
                                                <ComboBox Name="CmbStartPeriod" Grid.Column="4" Width="60" 
                                                          SelectedIndex="0"/>
                                            </Grid>
                                            <Button Content="Set Time" Margin="0,8,0,0" 
                                                    Click="BtnSetStartTime_Click"
                                                    Style="{StaticResource PrimaryButton}"/>
                                        </StackPanel>
                                    </Border>
                                </Popup>
                            </Grid>

                            <TextBlock Text="Finish Time" Style="{StaticResource LabelStyle}"/>
                            <Grid Margin="0,0,0,12">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="2"/>
                                    <ColumnDefinition Width="28"/>
                                </Grid.ColumnDefinitions>

                                <TextBox Name="FldEndTime" Grid.Column="0"
                                         Text="{Binding EndTimeField, UpdateSourceTrigger=PropertyChanged}"
                                         GotFocus="InputField_GotFocus"
                                         LostFocus="TimeField_LostFocus"
                                         PreviewKeyDown="TimeField_PreviewKeyDown"
                                         TabIndex="1"
                                         VerticalAlignment="Top"/>

                                <Button Name="BtnEndTimePicker" Grid.Column="1" 
                                        Width="28" Height="31" Content="🕒" FontSize="12"
                                        Padding="0"
                                        Click="BtnEndTimePicker_Click"
                                        ToolTip="Select end time from picker"
                                        VerticalAlignment="Center" Grid.ColumnSpan="2" Margin="2,0,0,0"/>

                                <Popup Name="PopupEndTime" 
                                       PlacementTarget="{Binding ElementName=BtnEndTimePicker}"
                                       Placement="Bottom"
                                       StaysOpen="False"
                                       AllowsTransparency="True">
                                    <Border Background="White" 
                                            BorderBrush="{StaticResource BorderBrush}" 
                                            BorderThickness="1" 
                                            CornerRadius="6"
                                            Padding="8">
                                        <Border.Effect>
                                            <DropShadowEffect Color="#000000" Opacity="0.15" 
                                                            BlurRadius="12" ShadowDepth="4" Direction="270"/>
                                        </Border.Effect>
                                        <StackPanel>
                                            <TextBlock Text="Select End Time" FontWeight="SemiBold" Margin="0,0,0,8"/>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="8"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="8"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>

                                                <ComboBox Name="CmbEndHour" Grid.Column="0" Width="60" 
                                                          SelectedIndex="8"/>
                                                <TextBlock Grid.Column="1" Text=":" VerticalAlignment="Center" 
                                                           FontSize="16" FontWeight="Bold"/>
                                                <ComboBox Name="CmbEndMinute" Grid.Column="2" Width="60" 
                                                          SelectedIndex="0"/>
                                                <ComboBox Name="CmbEndPeriod" Grid.Column="4" Width="60" 
                                                          SelectedIndex="0"/>
                                            </Grid>
                                            <Button Content="Set Time" Margin="0,8,0,0" 
                                                    Click="BtnSetEndTime_Click"
                                                    Style="{StaticResource PrimaryButton}"/>
                                        </StackPanel>
                                    </Border>
                                </Popup>
                            </Grid>

                            <TextBlock Text="Ticket Number" Style="{StaticResource LabelStyle}"/>
                            <TextBox Name="FldTicketNumber"
                                     Text="{Binding TicketNumberField, UpdateSourceTrigger=PropertyChanged}"
                                     GotFocus="InputField_GotFocus"
                                     TabIndex="2" Margin="0,0,0,12"/>

                            <TextBlock Text="Notes" Style="{StaticResource LabelStyle}"/>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="2"/>
                                    <ColumnDefinition Width="28"/>
                                </Grid.ColumnDefinitions>
                                <TextBox Name="FldNotes"
                                         Grid.Column="0"
                                         Text="{Binding NotesField, UpdateSourceTrigger=PropertyChanged}"
                                         GotFocus="InputField_GotFocus"
                                         TextWrapping="NoWrap"
                                         Height="130"
                                         AcceptsReturn="True"
                                         VerticalScrollBarVisibility="Auto"
                                         TabIndex="3"/>
                                <Button Name="BtnNotesPopOut"
                                        Grid.Column="2"
                                        Width="28"
                                        Height="130"
                                        Content="↗"
                                        FontSize="12"
                                        Padding="0"
                                        Click="BtnNotesPopOut_Click"
                                        ToolTip="Pop out notes editor"/>
                            </Grid>
                        </StackPanel>

                        <!--Actions Section-->
                        <StackPanel Grid.Row="2" VerticalAlignment="Bottom">
                            <CheckBox Name="ChkLunch" Content="Lunch Break" Margin="0,0,0,12"
                                    Checked="ChkLunch_Checked" Unchecked="ChkLunch_Unchecked" 
                                    DataContext="{x:Null}"
                                    ToolTip="Automatically create a 1-hour lunch break entry"/>

                            <Button Name="BtnSub" Height="36"
                                  Style="{StaticResource PrimaryButton}"
                                  TabIndex="4" Margin="0,0,0,8"
                                  Command="{x:Static views:MainWindow.SubmitCommand}">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Submit Entry" VerticalAlignment="Center"/>
                                    <TextBlock VerticalAlignment="Center"
                                             FontSize="11" 
                                             FontWeight="Normal"
                                             Margin="8,0,0,0" 
                                             Opacity="0.8"
                                             Text="{Binding Path=., Mode=OneWay, Converter={StaticResource ShortcutDisplayConverter}, ConverterParameter=Submit}"/>
                                </StackPanel>
                                <Button.ToolTip>
                                    <TextBlock>
                                        <Run Text="Add a new time entry to the current day ("/>
                                        <Run Text="{Binding Path=., Mode=OneWay, Converter={StaticResource ShortcutDisplayConverter}, ConverterParameter=Submit}"/>
                                        <Run Text=")"/>
                                    </TextBlock>
                                </Button.ToolTip>
                            </Button>

                            <Grid Margin="0,0,0,8">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="8"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <Button Grid.Column="0" Content="Toggle All" Height="32"
                                      TabIndex="7" Click="BtnToggleAllRecorded" ClickMode="Release" Padding="6,6"
                                      ToolTip="Toggle the recorded status for all entries"/>

                                <Button Grid.Column="2" Content="Insert" Height="32"
                                      TabIndex="8" Click="BtnInsert" ClickMode="Release"
                                      ToolTip="Insert a blank entry above the selected row (Ctrl+I)"/>
                            </Grid>

                            <Button Content="Export Selected" Height="32"
                                  TabIndex="5" Click="BtnExport" ClickMode="Release"
                                  ToolTip="Copy selected entry to clipboard and mark as recorded (Ctrl+E)"/>
                        </StackPanel>
                    </Grid>
                </Border>
            </Grid>
        </ScrollViewer>
    </DockPanel>
</Window>

